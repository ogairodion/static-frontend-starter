{{- $globals := ternary .Values.global.prod .Values.global.dev (eq .Values.global.env_name "prod") -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.global.appName }}
spec:
  replicas: {{ $globals.instanceCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  revisionHistoryLimit: 1
  selector:
    matchLabels:
      app: {{ .Values.global.appName }}
  template:
    metadata:
      labels:
        app: {{ .Values.global.appName }}
        ksync: {{ .Values.global.appName }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/39-app-cm.yaml") . | sha256sum }}
    spec:
      containers:
        - name: {{ .Values.global.appName }}
          image: {{ .Values.werf.image.app }}
          env:
          ports:
            - name: http
              containerPort: 80
          volumeMounts:
            - name: config-volume-nginx-1
              mountPath: /etc/nginx
            - name: config-volume-nginx-2
              mountPath: /etc/nginx/conf.d
      volumes:
        - name: config-volume-nginx-1
          configMap:
            name: nginx-config-1
        - name: config-volume-nginx-2
          configMap:
            name: nginx-config-2
      imagePullSecrets:
        - name: docker-registry{{- if ne .Values.global.env_name "prod" }}-dev{{- end}}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.global.appName }}
spec:
  ports:
    - port: 80
      name: http
  selector:
    app: {{ .Values.global.appName }}
---
apiVersion: {{ include "keycloak.ingressAPIVersion" . }}
kind: Ingress
metadata:
  annotations:
    {{- if ne .Values.global.mon_probe "" }}
    synergy.ru/blackbox.probe: {{ .Values.global.mon_probe }}
    {{- end }}
    {{- if ne .Values.global.mon_code "" }}
    synergy.ru/blackbox.code: {{ .Values.global.mon_code }}
    {{- end }}
    kubernetes.io/ingress.class: "nginx"
    {{- if ne .Values.global.www_redirect "no" }}
    nginx.ingress.kubernetes.io/from-to-www-redirect: "true"
    {{- end }}
    {{- if eq .Values.global.env_name "dev" }}
    nginx.ingress.kubernetes.io/auth-url: "http://dev-auth.auth.svc.cluster.local"
    {{- end }}
    nginx.ingress.kubernetes.io/configuration-snippet: |
      # Additional configuration snippet

      {{- if and (ne .Values.global.ci_path "") (ne .Values.global.ci_path "/") }}
      rewrite ^([^.]*[^/])$ $1/ permanent;
      rewrite (?i)/{{ .Values.global.ci_path | trim | trimAll "/" }}(/|$)(.*) /$2 break;
      {{- end }}
  name: ingress
spec:
  rules:
      - host: {{ .Values.global.ci_url | trim }}
        http:
          paths:
            {{- if and (ne .Values.global.ci_path "") (ne .Values.global.ci_path "/") }}
          - path: /{{ .Values.global.ci_path | trim | trimAll "/" }}
            {{- else }}
          - path: /
            {{- end }}
            {{- if $.Capabilities.APIVersions.Has "networking.k8s.io/v1/Ingress" }}
            pathType: Prefix
            backend:
              service:
                name: {{ .Values.global.appName }}
                port:
                  name: http
            {{- else }}
            backend:
              serviceName: {{ .Values.global.appName }}
              servicePort: http
            {{- end }}
---
